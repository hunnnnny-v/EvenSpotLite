import { useState, useEffect } from "react";
import { generateDataOptions, months, years } from "../../utils/DataRender";
import "./FilterBox.css";


// This component renders a form that allows users to filter data by selecting a month and year. 
// It takes a prop, `getFilters`, which is a callback function to pass the selected month and year 
// back to the parent component whenever the selection changes. The options for the month and year 
// dropdowns are generated by the utility functions `generateDataOptions`, `months`, and `years` 
// imported from "../../utils/DataRender". The component utilizes `useState` to track selected 
// values and `useEffect` to call `getFilters` whenever the selections are updated.






// eslint-disable-next-line react/prop-types
const FilterBox = ({ getFilters }) => {
  const [selectedMonth, setSelectedMonth] = useState("January");
  const [selectedYear, setSelectedYear] = useState(2023);

  const monthToRender = () => generateDataOptions(months);

  const yearsToRender = () => generateDataOptions(years);

  const handleMonthChange = (e) => {
    setSelectedMonth(e.target.value);
  };
  const handleYearChange = (e) => {
    setSelectedYear(Number(e.target.value));
  };

  useEffect(() => {
    const updateParent = () => {
      getFilters(selectedMonth, selectedYear);
    };
    updateParent();
  }, [selectedMonth, selectedYear, getFilters]);
  return (
    <div>
      <form className="filter-card">
        <div className="wrapper">
          <div className="date">
            <label htmlFor="month">Month : </label>
            <select value={selectedMonth} onChange={handleMonthChange}>
              {monthToRender()}
            </select>
          </div>
          <div className="date">
            <label htmlFor="year">Year : </label>
            <select value={selectedYear} onChange={handleYearChange}>
              {yearsToRender()}
            </select>
          </div>
        </div>
      </form>
    </div>
  );
};
export default FilterBox;
